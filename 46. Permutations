class Solution {
private:
    vector<vector<int>> res;
    vector<int> v;
public:
    void dfs_search(vector<int>& nums,vector<int>& temp,int n){
        int i,len = nums.size();
        if(n >= nums.size()){res.push_back(v);return;} 
        for(i=0;i<len;i++){
            if(temp[i] == 1) continue;
            temp[i] = 1;
            v.push_back(nums[i]);
            dfs_search(nums,temp,n+1);
            v.pop_back();
            temp[i] = 0;
        }
        return;
    }
    vector<vector<int>> permute(vector<int>& nums) {
        vector<int> temp(nums.size(),0);
        dfs_search(nums,temp,0);
        return res;
    }
};
