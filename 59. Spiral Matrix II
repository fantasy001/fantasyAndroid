class Solution {
public:
    void spiral_loop(int x,vector<vector<int>>& matrix,int m,int n,int start){
        if(m<=0 || n<=0) return;
        if(n==1) {
            int len = matrix.size()*matrix[0].size();
            for(int i=0;i<m;i++)
                matrix[x][x+i] = len-m+i+1;
            return;
        }
        if(m==1){
            int len = matrix.size()*matrix[0].size();
            for(int i=0;i<n;i++)
                matrix[x+i][x] = len-n+i+1;
            return;
        }
        int i,j;
        for(i=0;i<m-1;i++){
            matrix[x][x+i] = start+i+1;
            matrix[x+n-1][x+m-1-i] = start+m+n+i-1;
        }
        for(j=0;j<n-1;j++){
            matrix[x+j][x+m-1] = start+m+j;
            matrix[x+n-1-j][x] = start+2*m+n+j-2;
        }
        start += 2*(m+n)-4;
        spiral_loop(x+1,matrix,m-2,n-2,start);
    }
    vector<vector<int>> generateMatrix(int n) {
        vector<vector<int>> matrix(n,vector<int>(n,0));
        spiral_loop(0,matrix,n,n,0);
        return matrix;
    }
};
