/* Very similar to "62.Unique paths(https://github.com/fantasy001/leetcode/blob/master/62.%20Unique%20Paths)" */
class Solution {
private:
    vector<vector<int>> res;
public:
    int minPathSum(vector<vector<int>>& grid) {
        int m = grid.size(), n = grid[0].size(),i,j;
        res.resize(m,vector<int>(n));
        res[0][0] = grid[0][0];
        for(i=0;i<m;i++)
            for(j=0;j<n;j++){
                if(i==0 && j==0) continue;
                if(i-1 < 0) res[i][j] = res[i][j-1] + grid[i][j];
                else if(j-1 < 0) res[i][j] = res[i-1][j] + grid[i][j];
                else res[i][j] = min(res[i][j-1], res[i-1][j]) + grid[i][j];
            }
        return res[m-1][n-1];
    }
};
