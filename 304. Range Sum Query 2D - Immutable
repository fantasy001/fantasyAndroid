/* Take care of the special case when taking [ ] as input */
class NumMatrix {
private:
    vector<vector<int>> res;
    int err=0;
public:
    NumMatrix(vector<vector<int>> &matrix) {
        int m,n,i,j;
        m = matrix.size();
        if(m == 0) err = 1;   // special case: [ ] as input
        else{
            n = matrix[0].size();
            res.resize(m,vector<int>(n));
            if(n == 0) res[0][0] = 0;
            else
                res[0][0] = matrix[0][0];
            for(i=0;i<m;i++)
                for(j=0;j<n;j++){
                    if(i == 0 & j == 0) continue;
                    if(i-1<0) res[i][j] = res[i][j-1] + matrix[i][j];
                    else if(j-1<0) res[i][j] = res[i-1][j] + matrix[i][j];
                    else res[i][j] = res[i][j-1] + res[i-1][j] - res[i-1][j-1] + matrix[i][j];
                }
        }
    }

    int sumRegion(int row1, int col1, int row2, int col2) {
        if(err == 1) return 0;
        if(row1 == 0 && col1 == 0) return res[row2][col2];
        else if(row1 > 0 && col1 == 0) return res[row2][col2] - res[row1-1][col2];
        else if(row1 == 0 && col1 >0) return res[row2][col2] - res[row2][col1-1];
        else return res[row2][col2] - res[row1-1][col2] - res[row2][col1-1] + res[row1-1][col1-1];
    }
};


// Your NumMatrix object will be instantiated and called as such:
// NumMatrix numMatrix(matrix);
// numMatrix.sumRegion(0, 1, 2, 3);
// numMatrix.sumRegion(1, 2, 3, 4);
